@page "/transaction/{id}/edit/"

<PageTitle>Edit Transaction</PageTitle>

@using Domain
@using BusinessLogic
@inject SessionLogic SessionLogic
@inject NavigationManager NavigationManager
@inject TransactionLogic TransactionLogic

<div class="card">
    <div class="card-header">EDIT TRANSACTION</div>
    <div class="card-body">
        <label class="card-text p" for="title">Title:</label>
        <input type="text" for="title" class="form-control" placeholder="@transaction.Title" @bind="title">
        <br/>
        <label class="card-text p" for="date">Date:</label>
        <input readonly type="date" for="date" class="form-control" placeholder="@transaction.Date">
        <br/>
        <label class="card-text p" for="Amount">Amount:</label>
        <input type="number" for="Amount" class="form-control"  placeholder="@transaction.Amount" @bind="amount">
        <br/>
        <label class="card-text p" for="Curency">Currency:</label>
        <input readonly type="text" for="Curency" class="form-control" placeholder="@transaction.Currency">
        <br/>
        <label class="card-text p" for="Category">Category:</label>
        <input readonly type="text" for="Category" class="form-control" placeholder="@transaction.Category.Name">
        <br/>
        <label class="card-text p" for="Account">Account:</label>
        <input readonly type="text" for="Account" class="form-control" placeholder="@transaction.Account.Name">
        <div class="error-message">@errorMessage</div>
        <br/>
        <button class="btn btn-success" @onclick="SaveChanges">SAVE CHANGES</button>
        
        
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }
    
    private Space? currentSpace;
    private Transaction? transaction;
    private bool everythigOk = true;
    private string errorMessage;
    
    private string title;
    private int amount;


    protected override void OnInitialized()
    {
        currentSpace = SessionLogic.GetCurrentSpace();
        transaction = TransactionLogic.GetTransactionById(id);
    }

    public void SaveChanges()
    {
        everythigOk = true;
        errorMessage = "";

        try
        {
            transaction.Title = title;
        }
        catch (DomainException e)
        {
            everythigOk = false;
            errorMessage = e.Message;
        }
        try
        {
            transaction.Amount = amount;
        }
        catch (DomainException e)
        {
            everythigOk = false;
            errorMessage = e.Message;
        }
        
        if (everythigOk)
        {
            TransactionLogic.UpdateTransaction(transaction);

            NavigationManager.NavigateTo("/transactions");
        }

    }

}


<style>
    .error-message {
            color: red;
            padding: 10px;
            border-radius: 5px;
            margin-top: 10px;
    }
    
    button{
        float: right;
        align-content: center;
    }
    
    label {
        font-weight: bold;
    }
</style>
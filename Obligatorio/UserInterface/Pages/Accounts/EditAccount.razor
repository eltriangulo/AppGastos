@page "/Accounts/{name}/edit/"

<PageTitle>Edit Account</PageTitle>

@using Domain
@using BusinessLogic
@inject SessionLogic SessionLogic
@inject NavigationManager NavigationManager
@inject AccountLogic AccountLogic

<div class="card">
    <div class="card-header">EDIT ACCOUNT</div>
    <div class="card-body">
        <label class="card-text p" for="name">Name:</label>
        <input  required type="text" for="name" class="form-control" placeholder="@account.Name" @bind="name">
        <br/>
        <label class="card-text p" for="Amount">Initial Amount</label>
        <input  required type="number" for="Amount" class="form-control"  @bind="amount">
        <br/>
        <label class="card-text p" for="Curency">Currency:</label>
        <select type="text" for="Curency" class="form-control" @bind="currency" placeholder="UYU">
            <option value="UYU" selected="selected">UYU</option>
            <option value="USD">USD</option>
            <option value="EUR">EUR</option>
        </select>
        <br/>
        <label class="card-text p" for="creationDate">Creation Date:</label>
         <input readonly type="date" for="creationDate" class="form-control" placeholder="@account.CreationDate" >
        <div class="error-message">@errorMessage</div>
        <br/>
        <button class="btn btn-success" @onclick="SaveChanges">SAVE CHANGES</button>
    </div>
</div>

 @code { 
     [Parameter] 
     public string name { get; set; } 
      
     private Space? currentSpace; 
     private Domain.Account? account; 
     private bool everythigOk = true; 
     private string errorMessage; 
      
     private int amount;
     private string currency;
 
     protected override void OnInitialized() 
     { 
         currentSpace = SessionLogic.GetCurrentSpace(); 
         account = AccountLogic.GetAccountFromSpaceByName(name, currentSpace.Id);
     } 
 
     public void SaveChanges() 
     { 
         everythigOk = true; 
         errorMessage = ""; 
 
         try 
         { 
             account.Name = name; 
             account.Amount = amount;
             account.Currency = currency;
         } 
         catch (DomainException e) 
         { 
             everythigOk = false; 
             errorMessage = e.Message; 
         } 
          
         if (everythigOk) 
         { 
             AccountLogic.UpdateAccount(account);
             NavigationManager.NavigateTo("/accounts"); 
         } 
 
     } 
 
 } 
 
 
 <style> 
     .error-message { 
             color: red; 
             padding: 10px; 
             border-radius: 5px; 
             margin-top: 10px; 
     } 
      
     button{ 
         float: right; 
         align-content: center; 
     } 
      
     label { 
         font-weight: bold; 
     } 
 </style> 
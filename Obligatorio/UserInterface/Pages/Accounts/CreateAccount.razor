@page "/Accounts/createAccount/"

<PageTitle>Create Account</PageTitle>

@using Domain
@using BusinessLogic
@inject SessionLogic SessionLogic
@inject NavigationManager NavigationManager
@inject AccountLogic AccountLogic

<div class="card">
    <div class="card-header">CREATE ACCOUNT</div>
    <div class="card-body">
        <label class="card-text p" for="name">Name:</label>
        <input  required type="text" for="name" class="form-control" @bind="name">
        <br/>
        <label class="card-text p" for="Amount">Initial Amount</label>
        <input  required type="number" for="Amount" class="form-control"  @bind="amount">
        <br/>
        <label class="card-text p" for="Curency">Currency:</label>
        <select type="text" for="Curency" class="form-control" @bind="currency" placeholder="UYU">
            <option value="UYU" selected="selected">UYU</option>
            <option value="USD">USD</option>
            <option value="EUR">EUR</option>
        </select>
        <br/>
        <label class="card-text p" for="creationDate">Creation Date:</label>
         <input type="date" for="creationDate" class="form-control"  @bind="creationDate">
        <div class="error-message">@errorMessage</div>
        <br/>
        <button class="btn btn-success" @onclick="CreationAccount">CREATE</button>
    </div>
</div>

@code {
    private Space? currentSpace;
    private User? currentUser;
    private Domain.Account? account;
    
    private bool everythigOk = true;
    private bool nameIsOk = true;
    private string errorMessage;
    
    private string name = "";
    private decimal amount = 0;
    private string currency = "UYU";
    private DateTime creationDate = DateTime.Now;

    protected override void OnInitialized()
    {
        currentSpace = SessionLogic.GetCurrentSpace();
        currentUser = SessionLogic.GetCurrentUser();
        
    }

    public void CreationAccount()
    {
        everythigOk = true;
        errorMessage = "";
        account = new Domain.Account();

        try
        {
            account.Name = name;

        }
        catch (DomainException e)
        {
            everythigOk = false;
            errorMessage = e.Message;
        }

        try
        {
            account.Amount = amount;
        }
        catch (DomainException e)
        {
            everythigOk = false;
            errorMessage = e.Message;
        }

        try
        {
            account.Currency = currency;
        }
        catch (DomainException e)
        {
            everythigOk = false;
            errorMessage = e.Message;
        }

        try
        {
            account.CreationDate = creationDate;
        }
        catch (DomainException e)
        {
            everythigOk = false;
            errorMessage = e.Message;
        }
        account.Space = currentSpace;
        account.User = currentUser;

        if (everythigOk)
        {
            nameIsOk = true;
            try
            {
                AccountLogic.AddAccount(account);
            }
            catch (LogicException e)
            {
                errorMessage = e.Message;
                nameIsOk = false;
            }
            if(nameIsOk){
                NavigationManager.NavigateTo("/Accounts");
            }
        }

    }

}

<style>
    .error-message {
            color: red;
            padding: 10px;
            border-radius: 5px;
            margin-top: 10px;
    }
    
    button{
        float: right;
        align-content: center;
    }
    
    label {
        font-weight: bold;
    }
</style>